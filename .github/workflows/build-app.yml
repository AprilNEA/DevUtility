name: Build App (Manual)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (leave empty to use current version with commit hash)'
        required: false
        type: string

jobs:
  build-app:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:          
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
            arch: 'aarch64'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
            arch: 'x86_64'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
            arch: 'x86_64'
          - platform: 'windows-latest'
            args: ''
            arch: 'x86_64'

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      
      - uses: pnpm/action-setup@v4
        with:
          version: 10
          
      - name: Install Dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: Install Frontend Dependencies
        run: pnpm install
        
      - name: Set version for manual trigger
        run: pnpm build-version 

      - name: Build the App (without signing)
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          includeUpdaterJson: false
          includeDebug: true
          args: ${{ matrix.args }}

      - name: Upload build artifacts (macOS/Linux)
        if: matrix.platform != 'windows-latest'
        run: |
          mkdir -p artifacts
          paths=$(echo '${{ steps.build.outputs.artifactPaths }}' | jq -c '.[]' | sed 's/"//g')
          for fn in $paths; do
            if [[ -f $fn ]]; then
              echo "Copying $fn to artifacts/"
              cp "$fn" artifacts/
            fi
          done
          
      - name: Upload build artifacts (Windows)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path artifacts
          $jsonString = '${{ steps.build.outputs.artifactPaths }}'
          $filePaths = ConvertFrom-Json $jsonString
          foreach ($path in $filePaths) {
            if (Test-Path $path -PathType Leaf) {
              Write-Host "Copying $path to artifacts/"
              Copy-Item $path artifacts/
            }
          }
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.platform }}-${{ matrix.arch }}-${{ env.CUSTOM_VERSION }}
          path: artifacts/
          retention-days: 30
